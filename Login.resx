<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC0fACatHwAowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtHwAj7R8AP+0fAD/tHwAigAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALR8ACa0fAD/tHwA/7R8AP+0fAD/tHwAiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALR8AE60fAD/tHwA/7R8AP+0fAD/tHwAhwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC0fAAJtHwADQAAAAAAAAAAAAAAALR8AEq0fAD/tHwA/7R8AP+0fAD/tHwAigAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALR8AJm0fADutHwADQAAAAAAAAAAAAAAALR8AEy0fAD/tHwA/7R8
        AP+0fAD/tHwAigAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0fACctHwA/7R8AP+0fADXtHwACwAAAAAAAAAAAAAAALR8
        AEi0fAD/tHwA/7R8AP+0fAD/tHwAiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALR8ANS0fAD/tHwA/7R8AP+0fADVtHwACwAA
        AAAAAAAAAAAAALR8AEm0fAD/tHwA/7R8AP+0fAD/tHwAiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtHwABLR8AMy0fAD/tHwA/7R8
        AP+0fADXtHwADQAAAAAAAAAAAAAAALR8AEm0fAD/tHwA/7R8AP+0fAD/tHwAigAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALR8AAq0fAAnAAAAAAAAAAAAAAAAtHwABLR8
        AMy0fAD/tHwA/7R8AP+0fADYtHwADAAAAAAAAAAAAAAAALR8AEi0fAD/tHwA/7R8AP+0fAD/tHwAjAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtHwAiLR8AP+0fABbAAAAAAAA
        AAAAAAAAtHwAA7R8AMm0fAD/tHwA/7R8AP+0fADatHwADwAAAAAAAAAAAAAAALR8AEi0fAD/tHwA/7R8
        AP+0fAD/tHwAjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALR8AH+0fAD/tHwA/7R8
        AP+0fABVAAAAAAAAAAAAAAAAtHwAArR8AMq0fAD/tHwA/7R8AP+0fADatHwADwAAAAAAAAAAAAAAALR8
        AEi0fAD/tHwA/7R8AP+0fAD/tHwAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0fACDtHwA/7R8
        AP+0fAD/tHwA/7R8AP+0fABXAAAAAAAAAAAAAAAAtHwAA7R8AMm0fAD/tHwA/7R8AP+0fADbtHwADwAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALR8AJW0fADrtHwADAAAAAAAAAAAAAAAALR8AFC0fAD/tHwA/7R8AP+0fAD/tHwAhgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtHwAB7R8AAwAAAAAAAAAAAAAAAC0fABOtHwA/7R8AP+0fAD/tHwA/7R8
        AIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtHwAUbR8AP+0fAD/tHwA/7R8
        AP+0fACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALR8ACa0fAD/tHwA/7R8
        AP+0fAD/tHwAhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALR8
        AIm0fAD/tHwA/7R8AIMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALR8AJa0fACeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//5////8P///+B////wP///OB///xwP//4OB//+BwP//gOB/+cBwP/jg
        OB/wcBwP4DgOB8AcBwOADgOBAAeBwAAHgcCADgOBwBwHA+A4DgfwcBwP+OA4H/nAcD//gOB//4HA//+D
        gf//xwP//84H///8D///+B////w////+f/8=
</value>
  </data>
</root>